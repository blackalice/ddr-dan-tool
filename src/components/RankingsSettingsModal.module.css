.modalBackdrop {
  position: fixed;
  inset: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1001;
  padding: 1.5rem;
}

.modalContent {
  background-color: var(--bg-color);
  color: var(--text-color);
  width: 100%;
  max-width: 500px;
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  display: flex;
  flex-direction: column;
  max-height: 90vh;
}

.modalHeader {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  position: relative;
  padding: 1.5rem;
  padding-bottom: 1rem;
}

.modalHeader h3 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 700;
  text-align: left;
  width: 100%;
  padding-right: 3rem;
}

.closeButton {
  position: absolute;
  top: 50%;
  right: 1.5rem;
  transform: translateY(-50%);
  background: transparent;
  border: none;
  color: var(--text-color);
  font-size: 1.5rem;
  cursor: pointer;
}

.modalBody {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1.25rem;
  padding: 1.25rem 1.5rem 1.5rem;
}

.formSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.formSection + .formSection {
  margin-top: 0;
}

.sectionTitle {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  margin: 0;
  font-size: 1.1rem;
  font-weight: 600;
  text-align: center;
}

.sectionIcon {
  margin: 0;
}

.sectionDescription {
  margin: 0;
  color: var(--text-muted-color);
  font-size: 0.95rem;
}

.presetGroup {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 0.5rem;
  width: 100%;
}

.presetButton {
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  padding: 0.6rem 0.9rem;
  background-color: var(--card-bg-color);
  color: var(--text-color);
  font-size: 0.95rem;
  cursor: pointer;
  width: 100%;
  text-align: center;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.presetButton:hover {
  background-color: var(--card-hover-bg-color);
}

.selectRow {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.select {
  padding: 0.75rem;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-color);
  background-color: var(--card-bg-color);
  color: var(--text-color);
  font-size: 1rem;
}

.toggleGroup {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
  gap: 0.5rem;
}

.toggleButton {
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  padding: 0.6rem 0.9rem;
  background-color: var(--card-bg-color);
  color: var(--text-color);
  font-size: 0.95rem;
  cursor: pointer;
  text-align: center;
  transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
  width: 100%;
}

.toggleButton:hover {
  background-color: var(--card-hover-bg-color);
}

.toggleButtonActive {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  color: #ffffff;
}

.presetButtonActive {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  color: #ffffff;
}

.rangeInputs {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
}

.inputRow {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  flex: 1 1 160px;
}

.inputLabel {
  font-weight: 600;
  font-size: 0.95rem;
  color: var(--text-muted-color);
}

.disabledLabel {
  color: var(--text-muted-color);
  opacity: 0.7;
}

.inputDisabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.input {
  padding: 0.75rem;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-color);
  background-color: var(--card-bg-color);
  color: var(--text-color);
  font-size: 1rem;
  width: 100%;
}

.hint {
  font-size: 0.85rem;
  color: var(--text-muted-color);
}

.error {
  font-size: 0.9rem;
  color: var(--button-down-color, #ef4444);
  font-weight: 600;
}

.buttonGroup {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem 1.5rem 1.5rem;
  background-color: var(--bg-color-light);
  border-top: 1px solid var(--border-color);
}

.button {
  border: 1px solid transparent;
  border-radius: var(--radius-sm);
  padding: 0.75rem 1.25rem;
  font-weight: 600;
  cursor: pointer;
  font-size: 1rem;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.resetButton {
  background: transparent;
  border-color: var(--border-color);
  color: var(--text-muted-color);
}

.cancelButton {
  background-color: var(--card-hover-bg-color);
  color: var(--text-color);
}

.applyButton {
  background-color: var(--accent-color);
  color: #ffffff;
}

.resetButton:hover {
  color: var(--text-color);
}

.cancelButton:hover {
  background-color: var(--card-hover-bg-color-light);
}

.applyButton:hover {
  background-color: var(--accent-color-light);
}

@media (max-width: 1024px) {
  .modalBackdrop {
    align-items: flex-start;
    padding: 0;
  }

  .modalContent {
    width: 100%;
    height: 100vh;
    height: 100dvh;
    max-height: 100vh;
    max-height: 100dvh;
    border-radius: 0;
    justify-content: space-between;
    box-sizing: border-box;
    background-color: var(--bg-color-light);
  }

  .modalHeader {
    padding: calc(env(safe-area-inset-top, 1rem) + 0.5rem) 1.5rem 1rem;
  }

  .modalHeader h3 {
    padding-right: calc(env(safe-area-inset-right, 0) + 3rem);
  }

  .modalBody {
    flex-grow: 1;
    background-color: var(--bg-color);
    padding: 1.25rem 1.5rem 1.5rem;
    margin: 0;
  }

  .buttonGroup {
    justify-content: center;
    padding: 1rem 1.5rem calc(env(safe-area-inset-bottom, 0.5rem) + 1rem);
    margin: 0;
  }

  .closeButton {
    right: calc(env(safe-area-inset-right, 0) + 1.5rem);
  }
}

@media (max-width: 600px) {
  .presetGroup,
  .toggleGroup {
    grid-template-columns: 1fr;
  }
}
